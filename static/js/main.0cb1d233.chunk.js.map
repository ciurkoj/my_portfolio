{"version":3,"sources":["components/Animation.js","components/landingPage.js","components/router.js","components/NavBar.js","serviceWorker.js","index.js","logo.svg"],"names":["Animation","className","src","logo","alt","Component","Landing","style","width","margin","col","href","rel","target","aria-hidden","Router","exact","path","component","LandingPage","NavBar","height","position","background","title","textDecoration","color","to","scroll","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.0cb1d233.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./../logo.svg\";\nimport \"./Animation.css\";\n\nclass Animation extends Component {\n  render() {\n    return (\n      <div className=\"Animation\">\n        <header className=\"Animation-header\">\n          <img src={logo} className=\"Animation-logo\" alt=\"logo\" />\n          <p>Welcome to my prortfolio</p>\n        </header>\n      </div>\n    );\n  }\n}\nexport default Animation;\n","import React, { Component } from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\nimport \"./landingPage.css\";\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\n        <Grid className=\"landing-grid\">\n          <Cell col={12}>\n            <img\n              src=\"https://www.shareicon.net/data/256x256/2016/10/11/841505_man_512x512.png\"\n              alt=\"avatar\"\n              className=\"avatar-img\"\n            />\n\n            <div className=\"banner-text\">\n              <h1> Junior Web Developer</h1>\n\n              <hr />\n\n              <p>\n                HTML/CSS | React-MDL | JavaScript | React | NodeJS | Koa |\n                Express |\n              </p>\n\n              <div className=\"social-links\">\n                {/* LinkedIn */}\n                <a\n                  href=\"http://google.com\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n                </a>\n\n                {/* Github */}\n                <a\n                  href=\"http://google.com\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\n                </a>\n\n                {/* Freecodecamp */}\n                <a\n                  href=\"http://google.com\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  <i className=\"fa fa-free-code-camp\" aria-hidden=\"true\" />\n                </a>\n\n                {/* Youtube */}\n                <a\n                  href=\"http://google.com\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  <i className=\"fa fa-youtube-square\" aria-hidden=\"true\" />\n                </a>\n              </div>\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport LandingPage from \"./landingPage\";\n\nconst Router = () => (\n  <Switch>\n    <Route exact path=\"/my_portfolio\" component={LandingPage} />\n  </Switch>\n);\n\nexport default Router;\n","import React, { Component } from \"react\";\nimport { Layout, Header, Navigation, Drawer, Content } from \"react-mdl\";\nimport { Link } from \"react-router-dom\";\nimport Router from \"./router\";\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Header\n            className=\"header-color\"\n            style={{\n              height: \"300px\",\n              position: \"absolute\",\n              background:\n                \"url(http://www.getmdl.io/assets/demos/transparent.jpg) center / cover\",\n            }}\n            title={\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/my_portfolio\"\n              >\n                Jakub Ciurko\n              </Link>\n            }\n            scroll\n          >\n            <Navigation>\n              <Link to=\"/resume\">Resume</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/aboutme\">About Me</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Header>\n          <Drawer\n            title={\n              <Link style={{ textDecoration: \"none\", color: \"black\" }} to=\"/\">\n                My Portfolio\n              </Link>\n            }\n          >\n            <Navigation>\n              <Link to=\"/resume\">Resume</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/aboutme\">About Me</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Drawer>\n          <Content>\n            <div className=\"page-content\" />\n            <Router />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/Animation\";\nimport NavBar from \"./components/NavBar\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <div>\n      <NavBar />\n      <App />\n    </div>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}